name: Ensure README.md Exists and Has Content

on:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  check-and-generate-readme:
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Check if README.md is missing or empty
        id: check_readme
        run: |
          if [ ! -f "README.md" ] || [ ! -s "README.md" ]; then
            echo "generate=true" >> $GITHUB_OUTPUT
          else
            echo "generate=false" >> $GITHUB_OUTPUT
          fi

      - name: Stop if README.md exists and has content
        if: steps.check_readme.outputs.generate == 'false'
        run: |
          echo "README.md exists and is not empty. No action required."

      - name: Create branch, generate README.md, commit and push
        if: steps.check_readme.outputs.generate == 'true'
        run: |
          set -e
          BRANCH="auto-readme-$(date +%s)"
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b $BRANCH

          # Generate README.md
          FILES=$(ls -1 | grep -v README.md | head -20)
          CONTEXT=""
          for f in $(find . -maxdepth 1 -type f \( -name "*.py" -o -name "*.sh" -o -name "*.tf" \) | head -5); do
            CONTEXT="$CONTEXT\n\n--- File: $f ---\n$(head -c 2000 "$f")"
          done

          PROMPT="Generate a README.md explaining this project.

          Files:
          $FILES

          Code Samples:
          $CONTEXT"

          JSON_PROMPT=$(jq -Rs . <<<"$PROMPT")

          RESPONSE=$(curl -s https://api.openai.com/v1/chat/completions \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.OPENAI_API_KEY }}" \
            -d "{
              \"model\": \"gpt-4o-mini\",
              \"messages\": [{\"role\": \"user\", \"content\": $JSON_PROMPT}]
            }")

          OUTPUT=$(echo "$RESPONSE" | jq -r '.choices[0].message.content // empty')
          CLEANED=$(echo "$OUTPUT" | sed 's/^```.*//; s/```$//')

          if [ -z "$CLEANED" ]; then
            echo "No content returned from OpenAI. Writing placeholder README.md ..."
            (
              echo "# Project README"
              echo
              echo "This project currently has no detailed README.md."
              echo "The file was auto-generated by GitHub Actions as a placeholder."
              echo
              echo "Please update this file with:"
              echo "- Project purpose"
              echo "- Setup instructions"
              echo "- Usage examples"
              echo "- Contribution guidelines"
            ) > README.md
          else
            echo "$CLEANED" > README.md
          fi

          echo "===== Generated README.md Preview ====="
          head -20 README.md
          echo "======================================="

          # Prepare remote for pushing as bot
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}

          git add README.md
          git commit -m "Auto-generate README.md"
          git push origin $BRANCH
          echo "branch=$BRANCH" >> $GITHUB_ENV

      - name: Create Pull Request
        if: steps.check_readme.outputs.generate == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Auto-generate README.md"
          branch: ${{ env.branch }}
          title: "Auto-generate README.md"
          body: |
            This PR adds a generated README.md file.

            ## Preview
            ```markdown
            $(head -30 README.md)
            ```
          base: main
