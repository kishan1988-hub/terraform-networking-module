name: Manual Terraform Plan AI Review

on:
  workflow_dispatch:
    inputs:
      action-apply:
        description: "Apply if true, Plan default"
        required: true
        default: "false"
        type: choice
        options:
          - "true"
          - "false"

jobs:
  terraform:
    runs-on: self-hosted   # your local runner
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Terraform Init
        run: terraform init

      - name: Run Terraform Plan
        run: terraform plan -no-color > plan.txt

      - name: Ensure jq is installed
        run: |
          if ! command -v jq &> /dev/null; then
            echo "jq not found, installing..."
            if [ "$(uname)" == "Darwin" ]; then
              brew install jq
            else
              sudo apt-get update && sudo apt-get install -y jq
            fi
          fi

      - name: Prepare Trimmed Plan
        run: |
          # Limit the plan to the first 300 lines for safe API call
          head -n 300 plan.txt > plan_trimmed.txt

      - name: Generate AI Review
        run: |
          PLAN=$(jq -Rs . < plan_trimmed.txt)
          RESPONSE=$(curl -s -w "\nHTTP_STATUS:%{http_code}" https://api.openai.com/v1/chat/completions \
            -H "Authorization: Bearer ${{ secrets.OPENAI_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d "{
              \"model\": \"gpt-4o-mini\",
              \"messages\": [
                {\"role\":\"system\",\"content\":\"You are a Terraform plan reviewer. Summarize infrastructure changes clearly. Group them as Adds, Changes, or Destroys, and note risks/costs.\"},
                {\"role\":\"user\",\"content\":\"Here is the Terraform plan:\n$PLAN\"}
              ]
            }")

          BODY=$(echo "$RESPONSE" | sed -e '/HTTP_STATUS:/d')
          STATUS=$(echo "$RESPONSE" | grep HTTP_STATUS | cut -d: -f2)

          echo "HTTP Status: $STATUS"
          echo "Raw API Response: $BODY"

          if [ "$STATUS" != "200" ]; then
            echo "❌ OpenAI API call failed. Writing error to summary.txt"
            echo "$BODY" > summary.txt
          else
            PARSED=$(echo "$BODY" | jq -r '.choices[0].message.content' 2>/dev/null)
            if [ -z "$PARSED" ] || [ "$PARSED" == "null" ]; then
              echo "⚠️ Could not parse AI response. Writing raw body instead."
              echo "$BODY" > summary.txt
            else
              echo "$PARSED" > summary.txt
            fi
          fi

      - name: Show Plan & AI Review in Job Summary
        run: |
          echo "## Terraform Raw Plan (Trimmed)" >> $GITHUB_STEP_SUMMARY
          echo '```hcl' >> $GITHUB_STEP_SUMMARY
          cat plan_trimmed.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          echo "## AI Review (Human Readable)" >> $GITHUB_STEP_SUMMARY
          cat summary.txt >> $GITHUB_STEP_SUMMARY

      - name: Upload Plan & Review as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-review
          path: |
            plan.txt
            plan_trimmed.txt
            summary.txt
